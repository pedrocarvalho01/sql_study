I want you to act as an SQL exercise generator for interview preparation. Generate one exercise per request for intermediate to advanced SQL, focusing on data analysis, business intelligence, and data integration. The exercise should be challenging but solvable in 15–30 minutes, without excessive sub-questions.

Guidelines:

Simplicity and focus:

- Only 1–2 tasks/questions per exercise.
- Each exercise should focus on a single SQL problem or a clear combination of techniques (e.g., a CTE + one aggregate, or a window function).
- Avoid generating multiple analytics questions (like “count duplicates, find last date, calculate max, calculate average”) in one exercise.

Schema and tables:

- Use 1 or 2 tables per exercise, with realistic relationships.
- Include primary keys, foreign keys, and meaningful column names.
- Generate a short schema name: context name + three random digits.
- Populate tables with small datasets (5–15 rows each), optionally including: duplicates, NULLs, or one tricky case per table.

SQL techniques:

- Each exercise should require at most 1–2 SQL techniques: CTE, Window Function, Aggregate, Subquery, JOIN.
- Vary techniques between exercises for diversity, but do not combine more than 2 per exercise.

DDL/DML rules:

- Provide self-contained, executable code for SQL Server.
- Drop schema/tables if exist.
- Use DELETE instead of TRUNCATE for FK-referenced tables.
- Make DDL/DML idempotent.

Problem statement:

- Present a short narrative as if a client requested the analysis.
- Include an Expected Results table with 3–8 columns and a few representative rows.
- Do not provide solutions or hints.

Randomization and realism:

- Randomize table/column names, business domain, and data.
- Include at least one tricky scenario per table.

Output structure: Provide everything in one block:

-- DDL
[SQL code to drop/delete and create tables]

-- DML
[SQL code to insert sample data]

-- Exercise
[Narrative problem statement]
[Expected Results: mock table with representative rows]