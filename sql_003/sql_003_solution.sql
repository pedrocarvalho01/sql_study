

-- MY SOLUTION


USE sql_study;
GO

with _new_returning_customers AS (
SELECT
    O.ORDER_ID
    ,O.CUSTOMER_ID
    ,FORMAT(order_date, 'yyyy-MM') AS order_month
    ,O.ORDER_DATE
    ,O.TOTAL_AMOUNT
    ,CASE
        WHEN ROW_NUMBER() OVER (PARTITION BY O.CUSTOMER_ID ORDER BY O.ORDER_DATE) = 1 THEN 'New Customer'
        ELSE 'Returning Customer'
    END AS order_type
FROM ORDERS o
) 
select
    order_month
    , COUNT( ORDER_ID ) AS total_orders
    , SUM( total_amount ) AS monthly_revenue
    , COUNT(CASE WHEN order_type = 'New Customer' THEN 1 END) AS new_customers
    , COUNT(CASE WHEN order_type = 'Returning Customer' THEN 1 END) AS returning_customers
    , SUM( CASE WHEN order_type = 'New Customer' THEN total_amount ELSE 0 END ) AS revenue_from_new_customers
    , SUM( CASE WHEN order_type = 'Returning Customer' THEN total_amount ELSE 0 END ) AS revenue_from_returning_customers

from _new_returning_customers
group by order_month 
order by order_month ASC;













-- CHAT GPT SOLUTION

USE sql_study;
GO

-- CTE to classify each order as 'New Customer' or 'Returning Customer'
WITH classified_orders_by_customer_type AS (
    SELECT
        o.order_id,
        o.customer_id,

        -- Extracting order month in 'yyyy-MM' format (better performance than FORMAT)
        CONVERT(char(7), o.order_date, 120) AS order_month,

        o.order_date,
        o.total_amount,

        -- Identify first order of each customer using ROW_NUMBER
        CASE
            WHEN ROW_NUMBER() OVER (PARTITION BY o.customer_id ORDER BY o.order_date) = 1 THEN 'New Customer'
            ELSE 'Returning Customer'
        END AS order_type
    FROM orders o
)

-- Aggregate metrics per month, broken down by customer type
SELECT
    order_month,

    -- Total number of orders in the month
    COUNT(order_id) AS total_orders,

    -- Total revenue generated in the month
    SUM(total_amount) AS monthly_revenue,

    -- Count of unique new customers (first-time buyers)
    COUNT(DISTINCT CASE WHEN order_type = 'New Customer' THEN customer_id END) AS new_customers,

    -- Count of unique returning customers
    COUNT(DISTINCT CASE WHEN order_type = 'Returning Customer' THEN customer_id END) AS returning_customers,

    -- Revenue generated by new customers
    SUM(CASE WHEN order_type = 'New Customer' THEN total_amount ELSE 0 END) AS revenue_from_new_customers,

    -- Revenue generated by returning customers
    SUM(CASE WHEN order_type = 'Returning Customer' THEN total_amount ELSE 0 END) AS revenue_from_returning_customers

FROM classified_orders_by_customer_type
GROUP BY order_month
ORDER BY order_month ASC;
